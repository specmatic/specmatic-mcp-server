name: Release Package and Docker Image

on:
  workflow_dispatch:
    inputs:
      version_number:
        description: "Version to be released (both npm package and Docker image)"
        required: true
        type: string

jobs:
  npm-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm install
      - run: npm run build
      - run: npm run prepack
      - uses: reedyuk/npm-version@1.2.2
        with:
          version: ${{ inputs.version_number }}
      - uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}

  docker-release:
    runs-on: ubuntu-latest
    needs: npm-publish
    permissions:
      contents: write
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Login
        run: echo ${{ secrets.SPECMATIC_DOCKER_HUB_TOKEN }} | docker login -u ${{ vars.SPECMATIC_DOCKER_HUB_USERNAME }} --password-stdin

      - uses: actions/checkout@v4

      - name: Download semver cli
        if: runner.os != 'Windows'
        shell: bash
        run: |
          wget -O /usr/local/bin/semver https://raw.githubusercontent.com/fsaintjacques/semver-tool/master/src/semver
          chmod +x /usr/local/bin/semver

      - name: Validate the given version number
        run: semver validate ${{ inputs.version_number }}

      - name: Build and Publish Docker Image
        run: docker buildx build --push --platform=linux/amd64,linux/arm64 -t specmatic/specmatic-mcp:${{ inputs.version_number }} -t specmatic/specmatic-mcp:latest .

      - name: Tag the repo
        run: |
          echo 'Updating git credentials to allow push as per https://github.com/actions/checkout/blob/main/adrs/0153-checkout-v2.md#pat'
          git config set --local http.https://github.com/.extraheader "Authorization: basic $(/bin/echo -n x-access-token:${{ secrets.SPECMATIC_GITHUB_TOKEN }} | base64)"
          git tag ${{ inputs.version_number }}
          git push origin ${{ inputs.version_number }}
